<?xml version="1.0"?>
<!DOCTYPE xmitransformations SYSTEM 'xmitrans.dtd'>

<!-- xmiTrans2_0.xml

XMI transformations for the SDMetrics V2.3 default metamodel
for UML2.x and XMI 2.x source files.

Copyright (c) 2002-2018 Juergen Wuest

The MIT License

Permission is hereby granted, free of charge, to any person obtaining a copy
of this SDMetrics project file (the "Project File"), to deal in the Project File 
without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Project File, and to permit persons to whom the Project File is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Project File.

THE PROJECT FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE PROJECT FILE.

Note: this license grant only applies to this Project File, and not to any
other part of SDMetrics.

-->

<xmitransformations version="2.0">


    <!-- base element -->
    <xmitransformation modelelement="sdmetricsbase" xmipattern="sdmetricsbase"
                       recurse="true">
        <trigger name="id" type="attrval" attr="xmi:id"/>
        <trigger name="name" type="attrval" attr="name"/>
        <trigger name="name" type="ctext" src="name"/>
        <trigger name="umltype" type="attrval" attr="xmi:type"/>
        <trigger name="comments" type="xmi2assoc" attr="ownedComment"
                 src="uml:Comment"/>
    </xmitransformation>

    <!-- Abstract stuff for reusability -->

    <!-- Abstract stuff from common structure -->
    <xmitransformation modelelement="typedelement"
                       xmipattern="uml:Type" recurse="true">
        <trigger name="type" type="xmi2assoc" attr="type"/>
        <trigger name="type" type="cattrval" src="type" attr="href"/>
    </xmitransformation>

    <xmitransformation modelelement="multiplicityelement"
                       xmipattern="uml:MultiplicityElement" recurse="true">
        <trigger name="ordered" type="attrval" attr="isOrdered"/>
        <trigger name="ordered" type="ctext" src="isOrdered"/>
        <trigger name="unique" type="attrval" attr="isUnique"/>
        <trigger name="unique" type="ctext" src="isUnique"/>
        <trigger name="lowerValue" type="xmi2assoc" attr="lowerValue"/>
        <trigger name="upperValue" type="xmi2assoc" attr="upperValue"/>
        <trigger name="lower" type="attrval" attr="lower"/>
        <trigger name="lower" type="ctext" src="lower"/>
        <trigger name="upper" type="attrval" attr="upper"/>
        <trigger name="upper" type="ctext" src="upper"/>
        <trigger name="href" type="attrval" attr="href"/>
        <trigger name="href" type="ctext" src="href"/>
        <trigger name="href" type="cattrval" attr="href" src="type"/>
    </xmitransformation>

    <!-- abstract stuff from classification -->

    <xmitransformation modelelement="classifier"
                       xmipattern="uml:Classifier" recurse="true">
        <trigger name="abstract" type="attrval" attr="isAbstract"/>
        <trigger name="abstract" type="ctext" src="isAbstract"/>
        <trigger name="visibility" type="attrval" attr="visibility"/>
        <trigger name="visibility" type="ctext" src="visibility"/>
        <trigger name="leaf" type="attrval" attr="isFinalSpecialization"/>
        <trigger name="leaf" type="ctext" src="isFinalSpecialization"/>
        <trigger name="collaborationuses" type="xmi2assoc"
                 attr="collaborationUse" src="uml:CollaborationUse"/>
        <trigger name="generalization" type="xmi2assoc"
                 src="uml:Generalization" attr="generalization"/>
        <trigger name="substitution" type="xmi2assoc" src="uml:Substitution"
                 attr="substitution"/>
        <trigger name="elementimports" type="xmi2assoc"
                 src="uml:ElementImport" attr="elementImport"/>
        <trigger name="packageimports" type="xmi2assoc"
                 src="uml:PackageImport" attr="packageImport"/>
    </xmitransformation>

    <xmitransformation modelelement="feature"
                       xmipattern="uml:Feature">
        <trigger name="static" type="attrval" attr="isStatic"/>
        <trigger name="static" type="ctext" src="isStatic"/>
        <trigger name="visibility" type="attrval" attr="visibility"/>
        <trigger name="visibility" type="ctext" src="visibility"/>
    </xmitransformation>

    <!-- abstract stuff from common behavior -->

    <xmitransformation modelelement="behavior"
                       xmipattern="uml:Behavior">
        <trigger name="reentrant" type="attrval" attr="isReentrant"/>
        <trigger name="reentrant" type="ctext" src="isReentrant"/>
        <trigger name="parameters" type="xmi2assoc" attr="ownedParameter"/>
        <trigger name="parameters" type="xmi2assoc" attr="ownedMember"/>
        <trigger name="pre" type="xmi2assoc" attr="precondition"/>
        <trigger name="post" type="xmi2assoc" attr="postcondition"/>
        <trigger name="specification" type="xmi2assoc" attr="specification"/>
    </xmitransformation>

    <!-- classes, interfaces, attributes, operations -->
    <xmitransformation modelelement="class" xmipattern="uml:Class"
                       recurse="true">
        <trigger name="ownedattributes" type="xmi2assoc" src="uml:Property"
                 attr="ownedAttribute"/>
        <trigger name="ownedoperations" type="xmi2assoc" src="uml:Operation"
                 attr="ownedOperation"/>
        <trigger name="ownedports" type="xmi2assoc" src="uml:Port"
                 attr="ownedPort"/>
        <trigger name="nestedclassifiers" type="xmi2assoc"
                 attr="nestedClassifier"/>
        <trigger name="interfacerealizations" type="xmi2assoc"
                 src="uml:InterfaceRealization"
                 attr="interfaceRealization"/>
        <trigger name="connectors" type="xmi2assoc" src="uml:Connector"
                 attr="ownedConnector"/>
        <trigger name="ownedbehaviors" type="xmi2assoc" attr="ownedBehavior"/>
        <trigger name="generalization" type="xmi2assoc" attr="superClass"/>
        <trigger name="generalization" type="xmi2assoc"
                 src="uml:Generalization" attr="generalization"/>
    </xmitransformation>

    <xmitransformation modelelement="interface" xmipattern="uml:Interface"
                       recurse="true">
        <trigger name="ownedattributes" type="xmi2assoc" src="uml:Property"
                 attr="ownedAttribute"/>
        <trigger name="ownedoperations" type="xmi2assoc" src="uml:Operation"
                 attr="ownedOperation"/>
        <trigger name="nestedclassifiers" type="xmi2assoc"
                 attr="nestedClassifier"/>
        <trigger name="generalizations" type="xmi2assoc"
                 src="uml:Generalization" attr="generalization"/>
        <trigger name="visibility" type="attrval" attr="visibility"/>
        <trigger name="visibility" type="ctext" src="visibility"/>
    </xmitransformation>

    <xmitransformation modelelement="datatype" xmipattern="uml:DataType"
                       recurse="true">
        <trigger name="ownedattributes" type="xmi2assoc" src="uml:Property"
                 attr="ownedAttribute"/>
        <trigger name="ownedoperations" type="xmi2assoc" src="uml:Operation"
                 attr="ownedOperation"/>
        <trigger name="generalizations" type="xmi2assoc"
                 src="uml:Generalization" attr="generalization"/>
    </xmitransformation>

    <xmitransformation modelelement="enumeration" xmipattern="uml:Enumeration"
                       recurse="true">
        <trigger name="ownedliterals" type="xmi2assoc"
                 src="uml:EnumerationLiteral" attr="ownedLiteral"/>
    </xmitransformation>
    <xmitransformation modelelement="enumerationliteral"
                       xmipattern="uml:EnumerationLiteral"/>
    <xmitransformation modelelement="primitivetype"
                       xmipattern="uml:PrimitiveType" requirexmiid="false">
        <trigger name="href" type="attrval" attr="href"/>
    </xmitransformation>

    <xmitransformation modelelement="connector" xmipattern="uml:Connector"
                       recurse="true">
        <trigger name="ends" type="xmi2assoc" attr="end"
                 src="uml:ConnectorEnd"/>
    </xmitransformation>
    <xmitransformation modelelement="connectorend"
                       xmipattern="uml:ConnectorEnd">
        <trigger name="role" type="xmi2assoc" attr="role"/>
    </xmitransformation>

    <xmitransformation modelelement="property" xmipattern="uml:Property"
                       recurse="true">
        <trigger name="visibility" type="attrval" attr="visibility"/>
        <trigger name="visibility" type="ctext" src="visibility"/>
        <trigger name="propertytype" type="xmi2assoc" attr="type"/>
        <trigger name="isreadonly" type="attrval" attr="isReadOnly"/>
        <trigger name="isreadonly" type="ctext" src="isReadOnly"/>
        <trigger name="association" type="xmi2assoc" src="uml:Association"
                 attr="association"/>
        <trigger name="aggregation" type="attrval" attr="aggregation"/>
        <trigger name="aggregation" type="ctext" src="aggregation"/>
        <trigger name="qualifiers" type="xmi2assoc" src="uml:Property"
                 attr="qualifier"/>
        <trigger name="default" type="xmi2assoc" attr="defaultValue"/>
        <trigger name="static" type="attrval" attr="isStatic"/>
        <trigger name="static" type="ctext" src="isStatic"/>
    </xmitransformation>

    <xmitransformation modelelement="port" xmipattern="uml:Port"
                       recurse="true">
        <trigger name="behavior" type="attrval" attr="isBehavior"/>
        <trigger name="behavior" type="ctext" src="isBehavior"/>
        <trigger name="conjugated" type="attrval" attr="isConjugated"/>
        <trigger name="conjugated" type="ctext" src="isConjugated"/>
        <trigger name="service" type="attrval" attr="isService"/>
        <trigger name="service" type="ctext" src="isService"/>
    </xmitransformation>

    <xmitransformation modelelement="operation" xmipattern="uml:Operation"
                       recurse="true">
        <trigger name="abstract" type="attrval" attr="isAbstract"/>
        <trigger name="abstract" type="ctext" src="isAbstract"/>
        <trigger name="isquery" type="attrval" attr="isQuery"/>
        <trigger name="isquery" type="ctext" src="isQuery"/>
        <trigger name="ownedparameters" type="xmi2assoc" src="uml:Parameter"
                 attr="ownedParameter"/>
        <trigger name="concurrency" type="attrval" attr="concurrency"/>
        <trigger name="concurrency" type="ctext" src="concurrency"/>
        <trigger name="exceptions" type="ctext" src="raisedException"/>
        <trigger name="exceptions" type="xmi2assoc" attr="raisedException"/>
        <trigger name="bodycondition" type="xmi2assoc" attr="bodyCondition"/>
    </xmitransformation>

    <xmitransformation modelelement="parameter" xmipattern="uml:Parameter"
                       recurse="true">
        <trigger name="kind" type="attrval" attr="direction"/>
        <trigger name="kind" type="ctext" src="direction"/>
        <trigger name="parametertype" type="xmi2assoc" attr="type"/>
        <trigger name="exception" type="attrval" attr="isException"/>
        <trigger name="exception" type="ctext" src="isException"/>
        <trigger name="stream" type="attrval" attr="isStream"/>
        <trigger name="stream" type="ctext" src="isStream"/>
        <trigger name="default" type="xmi2assoc" attr="defaultValue"/>
        <trigger name="defaultstring" type="attrval" attr="default"/>
        <trigger name="defaultstring" type="ctext" src="default"/>
        <trigger name="effect" type="attrval" attr="effect"/>
        <trigger name="effect" type="ctext" src="effect"/>
    </xmitransformation>

    <xmitransformation modelelement="method" xmipattern="uml:Method"
                       recurse="true">
    </xmitransformation>

    <!-- models, packages -->
    <xmitransformation modelelement="package" xmipattern="uml:Package"
                       recurse="true">
        <trigger name="ownedmembers" type="xmi2assoc"
                 attr="packagedElement"/><!-- UML 2.1 -->
        <trigger name="ownedmembers" type="xmi2assoc"
                 attr="ownedMember"/><!-- UML 2.0 -->
        <trigger name="ownedmembers" type="xmi2assoc"
                 attr="ownedPackageMember"/>
        <trigger name="ownedmembers" type="xmi2assoc" attr="ownedType"/>
        <trigger name="ownedmembers" type="xmi2assoc" attr="nestedPackage"
                 src="uml:Package"/>
        <trigger name="profileapplications" type="xmi2assoc"
                 attr="profileApplication"/>
    </xmitransformation>

    <xmitransformation modelelement="model" xmipattern="uml:Model"
                       recurse="true" requirexmiid="false"/>

    <xmitransformation modelelement="profile" xmipattern="uml:Profile"
                       recurse="true">
        <trigger name="metaclasses" type="xmi2assoc"
                 attr="metaclassReference" src="uml:ElementImport"/>
        <trigger name="metapackages" type="xmi2assoc"
                 attr="metamodelReference" src="uml:PackageImport"/>
    </xmitransformation>

    <xmitransformation modelelement="profileapplication"
                       xmipattern="uml:ProfileApplication">
        <trigger name="applied" type="xmi2assoc" attr="appliedProfile"/>
        <trigger name="applied" type="xmi2assoc" attr="target"/>
        <trigger name="applying" type="xmi2assoc" attr="applyingPackage"/>
        <trigger name="applying" type="xmi2assoc" attr="source"/>
        <trigger name="strict" type="attrval" attr="isStrict"/>
        <trigger name="strict" type="ctext" src="isStrict"/>
    </xmitransformation>


    <xmitransformation modelelement="elementimport"
                       xmipattern="uml:ElementImport" recurse="true">
        <trigger name="imported" type="xmi2assoc" attr="importedElement"/>
        <trigger name="imported" type="xmi2assoc" attr="target"/>
        <trigger name="importer" type="xmi2assoc" attr="importingNamespace"/>
        <trigger name="importer" type="xmi2assoc" attr="source"/>
        <trigger name="visibility" type="attrval" attr="visibility"/>
        <trigger name="visibility" type="ctext" src="visibility"/>
    </xmitransformation>

    <xmitransformation modelelement="packageimport"
                       xmipattern="uml:PackageImport"/>
    <!-- relationships: association, generalization, ... -->
    <xmitransformation modelelement="association" xmipattern="uml:Association"
                       recurse="true">
        <trigger name="memberends" type="xmi2assoc" attr="memberEnd"
                 src="uml:Property"/>
        <trigger name="ownedends" type="xmi2assoc" attr="ownedEnd"
                 src="uml:Property"/>
        <trigger name="generalizations" type="xmi2assoc"
                 src="uml:Generalization" attr="generalization"/>
    </xmitransformation>

    <xmitransformation modelelement="associationclass"
                       xmipattern="uml:AssociationClass" recurse="true"/>

    <xmitransformation modelelement="generalization"
                       xmipattern="uml:Generalization">
        <trigger name="general" type="xmi2assoc" attr="general"/>
        <trigger name="general" type="xmi2assoc" attr="target"/>
        <trigger name="specific" type="xmi2assoc" attr="specific"/>
        <trigger name="specific" type="xmi2assoc" attr="source"/>
        <trigger name="substitutable" type="attrval" attr="isSubstitutable"/>
        <trigger name="substitutable" type="ctext" src="isSubstitutable"/>
    </xmitransformation>

    <xmitransformation modelelement="generalizationset"
                       xmipattern="uml:GeneralizationSet">
        <trigger name="covering" type="attrval" attr="isCovering"/>
        <trigger name="covering" type="ctext" src="isCovering"/>
        <trigger name="disjoint" type="attrval" attr="isDisjoint"/>
        <trigger name="disjoint" type="ctext" src="isDisjoint"/>
        <trigger name="generalizations" type="xmi2assoc" attr="generalization"/>
        <trigger name="powertype" type="xmi2assoc" attr="powertype"/>
    </xmitransformation>
    <xmitransformation modelelement="interfacerealization"
                       xmipattern="uml:InterfaceRealization">
        <trigger name="contract" type="xmi2assoc" attr="contract"/>
        <trigger name="contract" type="xmi2assoc" attr="supplier"/>
        <trigger name="implementation" type="xmi2assoc" attr="client"/>
        <trigger name="implementation" type="xmi2assoc"
                 attr="implementingClassifier"/>
    </xmitransformation>
    <!-- also allow uml:Implementation from earlier versions of the UML2 metamodel. -->
    <xmitransformation modelelement="interfacerealization"
                       xmipattern="uml:Implementation">

        <trigger name="contract" type="xmi2assoc" attr="contract"/>

        <trigger name="contract" type="xmi2assoc" attr="supplier"/>
    </xmitransformation>

    <xmitransformation modelelement="dependency" xmipattern="uml:Dependency">
        <trigger name="supplier" type="xmi2assoc" attr="supplier"/>
        <trigger name="client" type="xmi2assoc" attr="client"/>
    </xmitransformation>

    <xmitransformation modelelement="abstraction" xmipattern="uml:Abstraction">
        <trigger name="mapping" type="xmi2assoc" attr="mapping"/>
    </xmitransformation>

    <xmitransformation modelelement="realization" xmipattern="uml:Realization">
        <trigger name="supplier" type="xmi2assoc" attr="supplier"/>
        <trigger name="client" type="xmi2assoc" attr="client"/>
    </xmitransformation>

    <xmitransformation modelelement="substitution"
                       xmipattern="uml:Substitution">
        <trigger name="supplier" type="xmi2assoc" attr="contract"/>
        <trigger name="supplier" type="xmi2assoc" attr="supplier"/>
        <trigger name="client" type="xmi2assoc" attr="substitutingClassifier"/>
        <trigger name="client" type="xmi2assoc" attr="client"/>
    </xmitransformation>
    <xmitransformation modelelement="usage" xmipattern="uml:Usage"/>


    <!-- objects, connectors -->

    <xmitransformation modelelement="collaboration"
                       xmipattern="uml:Collaboration" recurse="true">
    </xmitransformation>

    <xmitransformation modelelement="collaborationuse"
                       xmipattern="uml:CollaborationUse"
                       recurse="true">
        <trigger name="roles" type="xmi2assoc" attr="roleBinding"/>
        <trigger name="type" type="xmi2assoc" attr="type"/>
    </xmitransformation>

    <xmitransformation modelelement="instancespecification"
                       xmipattern="uml:InstanceSpecification" recurse="true">
        <trigger name="classifier" type="xmi2assoc" attr="classifier"/>
        <trigger name="slots" type="xmi2assoc" src="uml:Slot" attr="slot"/>
        <trigger name="specification" type="xmi2assoc" attr="specification"/>
    </xmitransformation>

    <xmitransformation modelelement="slot"
                       xmipattern="uml:Slot">
        <trigger name="defining" type="xmi2assoc" attr="definingFeature"/>
        <trigger name="value" type="xmi2assoc" attr="value"/>
    </xmitransformation>

    <!-- components, deployments -->
    <xmitransformation modelelement="component" xmipattern="uml:Component"
                       recurse="true">
        <trigger name="realizations" type="xmi2assoc" attr="realization"
                 src="uml:ComponentRealization"/>
        <trigger name="members" type="xmi2assoc" attr="ownedMember"/>
        <trigger name="packagedElement" type="xmi2assoc" attr="packagedElement"/>
        <trigger name="indirectlyInstantiated" type="attrval"
                 attr="isIndirectlyInstantiated"/>
        <trigger name="indirectlyInstantiated" type="ctext"
                 src="isIndirectlyInstantiated"/>
    </xmitransformation>

    <xmitransformation modelelement="componentrealization"
                       xmipattern="uml:ComponentRealization"><!-- new in UML 2.1 -->
        <trigger name="client" type="xmi2assoc" attr="realizingClassifier"/>
        <trigger name="component" type="xmi2assoc" attr="supplier"/>
        <trigger name="component" type="xmi2assoc" attr="abstraction"/>
        <trigger name="client" type="xmi2assoc" attr="client"/>
    </xmitransformation>

    <xmitransformation modelelement="association"
                       xmipattern="uml:CommunicationPath" recurse="true">
        <trigger name="memberends" type="xmi2assoc" attr="memberEnd"
                 src="uml:Property"/>
        <trigger name="ownedends" type="xmi2assoc" attr="ownedEnd"
                 src="uml:Property"/>
        <trigger name="generalizations" type="xmi2assoc"
                 src="uml:Generalization" attr="generalization"/>
    </xmitransformation>

    <!-- state machines -->

    <xmitransformation modelelement="statemachine" xmipattern="uml:StateMachine"
                       recurse="true">
        <trigger name="regions" type="xmi2assoc" attr="region"
                 src="uml:Region"/>
        <trigger name="isprotocol" type="constant" attr="false"/>

        <trigger name="connectionpoints" type="xmi2assoc" attr="connectionPoint"
                 src="uml:Pseudostate"/>
    </xmitransformation>
    <xmitransformation modelelement="statemachine"
                       xmipattern="uml:ProtocolStateMachine" recurse="true">
        <trigger name="regions" type="xmi2assoc" attr="region"
                 src="uml:Region"/>
        <trigger name="isprotocol" type="constant" attr="true"/>

        <trigger name="connectionpoints" type="xmi2assoc" attr="connectionPoint"
                 src="uml:Pseudostate"/>
    </xmitransformation>

    <xmitransformation modelelement="region" xmipattern="uml:Region"
                       recurse="true">
        <trigger name="subvertices" type="xmi2assoc" attr="subvertex"/>
        <trigger name="transitions" type="xmi2assoc" attr="transition"
                 src="uml:Transition"/>
        <trigger name="statemachine" type="xmi2assoc" attr="stateMachine"/>
        <trigger name="state" type="xmi2assoc" attr="state"/>
    </xmitransformation>

    <xmitransformation modelelement="state" xmipattern="uml:State"
                       recurse="true">
        <trigger name="kind" type="constant" attr="state"/>

        <trigger name="entry" type="xmi2assoc" attr="entry"/>
        <trigger name="exit" type="xmi2assoc" attr="exit"/>
        <trigger name="doactivity" type="xmi2assoc" attr="doActivity"/>

        <trigger name="regions" type="xmi2assoc" attr="region"
                 src="uml:Region"/>
        <trigger name="connectionpoints" type="xmi2assoc" attr="connectionPoint"
                 src="uml:Pseudostate"/>
        <trigger name="submachine" type="xmi2assoc" attr="submachine"
                 src="uml:StateMachine"/>
    </xmitransformation>

    <xmitransformation modelelement="state" xmipattern="uml:FinalState">
        <trigger name="kind" type="constant" attr="final"/>
    </xmitransformation>


    <xmitransformation modelelement="state" xmipattern="uml:Pseudostate">
        <trigger name="kind" type="attrval" attr="kind"/>
        <trigger name="kind" type="ctext" src="kind"/>
    </xmitransformation>

    <xmitransformation modelelement="transition" xmipattern="uml:Transition"
                       recurse="true">
        <trigger name="kind" type="attrval" attr="kind"/>
        <trigger name="kind" type="ctext" src="kind"/>
        <trigger name="transsource" type="xmi2assoc" attr="source"/>
        <trigger name="transtarget" type="xmi2assoc" attr="target"/>
        <trigger name="triggers" type="xmi2assoc" attr="trigger"
                 src="uml:Trigger"/>
        <trigger name="guard" type="xmi2assoc" attr="guard"/>

        <trigger name="effect" type="xmi2assoc" attr="effect"/>

        <trigger name="isprotocol" type="constant" attr="false"/>
        <trigger name="container" type="xmi2assoc" attr="container"/>
    </xmitransformation>

    <xmitransformation modelelement="trigger" xmipattern="uml:Trigger"
                       recurse="true">
        <trigger name="event" type="xmi2assoc" attr="event"/>
    </xmitransformation>

    <xmitransformation modelelement="constraint" xmipattern="uml:Constraint"
                       recurse="true">
        <trigger name="specification" type="xmi2assoc"
                 attr="specification"/>
        <trigger name="constrainedElement" type="xmi2assoc"
                 attr="constrainedElement"/>
        <trigger name="context" type="xmi2assoc" attr="context"/>
    </xmitransformation>

    <xmitransformation modelelement="interval"
                       xmipattern="uml:Interval" recurse="true">
        <trigger name="max" type="ctext" src="max"/>
        <trigger name="max" type="attrval" attr="max"/>
        <trigger name="max" type="xmi2assoc" attr="max"/>
        <trigger name="min" type="attrval" attr="min"/>
        <trigger name="min" type="ctext" src="min"/>
        <trigger name="min" type="xmi2assoc" attr="min"/>
    </xmitransformation>

    <xmitransformation modelelement="intervalconstraint"
                       xmipattern="uml:IntervalConstraint"
                       recurse="true">
        <trigger name="intervalspecification" type="xmi2assoc"
                 attr="specification" src="uml:Interval"/>
    </xmitransformation>

    <!-- value specifications, we count them, but we are indeed interested in
    their contents -->
    <xmitransformation modelelement="literal"
                       xmipattern="xmi:LiteralSpecification" recurse="true"
    >
        <trigger name="value" type="ctext" src="value"/>
        <trigger name="value" type="attrval" attr="value"/>
    </xmitransformation>
    <xmitransformation modelelement="expression" xmipattern="uml:Expression"/>
    <xmitransformation modelelement="opaqueexpression"
                       xmipattern="uml:OpaqueExpression">
        <trigger name="body" type="ctext" src="body"/>
        <trigger name="language" type="ctext" src="language"/>
    </xmitransformation>
    <xmitransformation modelelement="instancevalue"
                       xmipattern="uml:InstanceValue">
        <trigger name="instance" type="xmi2assoc" attr="instance"
                 src="uml:InstanceSpecification"/>
    </xmitransformation>
    <xmitransformation modelelement="literalboolean"
                       xmipattern="uml:LiteralBoolean"/>
    <xmitransformation modelelement="literalinteger"
                       xmipattern="uml:LiteralInteger"/>
    <xmitransformation modelelement="literalreal" xmipattern="uml:LiteralReal"/>
    <xmitransformation modelelement="literalstring"
                       xmipattern="uml:LiteralString"/>
    <xmitransformation modelelement="literalunlimitednatural"
                       xmipattern="uml:LiteralUnlimitedNatural"/>
    <xmitransformation modelelement="literalnull" xmipattern="uml:LiteralNull">
        <trigger name="value" type="ignore"/>
    </xmitransformation>

    <!-- concrete behaviors -->

    <xmitransformation modelelement="opaquebehavior"
                       xmipattern="uml:OpaqueBehavior">
        <trigger name="reentrant" type="attrval" attr="isReentrant"/>
        <trigger name="reentrant" type="ctext" src="isReentrant"/>
        <trigger name="parameters" type="xmi2assoc" attr="ownedParameter"/>
        <trigger name="parameters" type="xmi2assoc" attr="ownedMember"/>
        <trigger name="pre" type="xmi2assoc" attr="precondition"/>
        <trigger name="post" type="xmi2assoc" attr="postcondition"/>
        <trigger name="specification" type="xmi2assoc" attr="specification"/>
    </xmitransformation>
    <xmitransformation modelelement="functionbehavior"
                       xmipattern="uml:FunctionBehavior"/>

    <!-- stereotypes, comments -->
    <xmitransformation modelelement="stereotype" xmipattern="uml:Stereotype"/>

    <xmitransformation modelelement="comment" xmipattern="uml:Comment">
        <trigger name="body" type="attrval" attr="body"/>
        <trigger name="body" type="ctext" src="body"/>
        <trigger name="annotated" type="xmi2assoc" attr="annotatedElement"/>
    </xmitransformation>

    <xmitransformation modelelement="appliedstereotype"
                       xmipattern="Berta">
        <trigger name="targets" type="xmi2assoc" attr="base_Class"/>
    </xmitransformation>
</xmitransformations>
